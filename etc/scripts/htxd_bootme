#!/bin/ksh

# IBM_PROLOG_BEGIN_TAG
# 
# Copyright 2003,2016 IBM International Business Machines Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 		 http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# IBM_PROLOG_END_TAG
#
# COMPONENT_NAME: htxd
#
###############################################################################
###############################################################################
##
##  bootme:  setup Linux system to automatically load and run htx on reboot
##
###############################################################################


# THERE IS NOTHING TO EDIT IN THIS FILE
# TO CHANGE BOOTME CONFIG GO TO: /usr/lpp/htx/rules/reg/bootme/default


###############################################################################
###############################################################################
usage()
{
	echo "bootme (on | off | status)"
}
###############################################################################


###############################################################################
htxd_bootme_on ()
{

# Check for free space in directories likely to cause problems if full
	check_space "/tmp" 10
	check_space "/var" 10

# create crontab entry
# Add crontab entry to cause system to run bootmeStuff
	CRONENTRY="`cat /etc/crontab | grep bootme`"
	if [ "$CRONENTRY" == ""  ]; then
		cp /etc/crontab /etc/crontab.ORIG
		bootmeStuff=/usr/lpp/htx/etc/scripts/bootmeStuff
		echo "$REBOOT * * *  root $bootmeStuff >/dev/null 2>&1 &" >>/etc/crontab
	else
		exit 21
	fi


# Create a hidden "yes" file to pipe into the shutdown -t command
	echo "yes" > /tmp/.bootme

# Log bootme on
	echo >> $BM_LOG
	echo "`date +\"%D %T\"`: bootme on" >> $BM_LOG
	echo "`date +\"%D %T\"`: bootme session started" >> $BM_LOG
	echo "crontab: $REBOOT * * * $bootmeStuff" >> $BM_LOG
}

###############################################################################


###############################################################################
htxd_bootme_off ()
{
	CRONENTRY="`cat /etc/crontab | grep bootme`"
	if [ "$CRONENTRY" == ""  ]; then
		exit 32;
	fi

# remove crontab entry
	[ -e /etc/crontab.ORIG ] && cp /etc/crontab.ORIG /etc/crontab 

# Remore HTXD bootme flag file
	[ -e /usr/lpp/htx/.htxd_autostart ] && rm -f /usr/lpp/htx/.htxd_autostart || exit 31;

# Remove the hidden "yes" file for the shutdown -t command
	[ -e /tmp/.bootme ] && rm -f /tmp/.bootme
  
# Remove copies of htxerr.bootme
	[ -e /tmp/htxerr.bootme1 ] && rm /tmp/htxerr.bootme1
	[ -e /tmp/htxerr.bootme2 ] && rm /tmp/htxerr.bootme2

# Log bootme off
	echo "`date +\"%D %T\"`: bootme off" >> $BM_LOG
	echo "`date +\"%D %T\"`: bootme session ended" >> $BM_LOG
	echo >> $BM_LOG
}
###############################################################################


###############################################################################
htxd_bootme_status ()
{
	CRONENTRY="`cat /etc/crontab | grep bootme`"
	if [ "$CRONENTRY" == ""  ]; then
		exit 41;
	fi

	[ ! -e /usr/lpp/htx/.htxd_autostart ] && exit 42;

}
###############################################################################


###############################################################################
check_space ()
{
	SpaceAvail=`df -P -k $1 | tail -1 | awk '{print $4}'`
	SpaceAvail=$((SpaceAvail/1024))
	[ $SpaceAvail -lt $2 ] && { echo "Insufficient space in $1 (needed $2 MB, have $SpaceAvail MB" >> $BM_LOG ; exit 2; }
}
###############################################################################


###############################################################################
# main
###############################################################################

BM_LOG=/tmp/bootme.log

# pulls REBOOT statement from /usr/lpp/htx/rules/reg/bootme/default
	rules=/usr/lpp/htx/rules/reg/bootme/default
	REBOOT=$(grep "^REBOOT:" $rules | head -n1)
	REBOOT=${REBOOT##*: }
	[ -z "$REBOOT" ] && { echo "Please check the value of REBOOT in: $rules" >> $BM_LOG ; exit 11; }

# checks BOOT_CMD statement from $rules
	BOOT_CMD=$(grep "^BOOT_CMD:" $rules | head -n1)
	BOOT_CMD=${BOOT_CMD##*: }
	[ -z "$BOOT_CMD" ] && { echo "Please check the value of BOOT_CMD in: $rules" >> $BM_LOG ; exit 12; }

# checks BOOT_WAIT statement from $rules
	BOOT_WAIT=$(grep "^BOOT_WAIT:" $rules | head -n1 | awk '{ print $2 }')
	[ -z "$BOOT_WAIT" ] && { echo "Please check the value of BOOT_WAIT in: $rules" >> $BM_LOG ; exit 13; }

# select action
case $1 in

	on) htxd_bootme_on ;;

    off) htxd_bootme_off ;;

    status) htxd_bootme_status ;;

	*) usage ;;
esac

sync;
exit 0

###############################################################################
