#!/bin/ksh

# IBM_PROLOG_BEGIN_TAG
# 
# Copyright 2003,2016 IBM International Business Machines Corp.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# 		 http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
# implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# IBM_PROLOG_END_TAG



# Output header
#echo "CCIN PN SN EC STATUS DEVICE PHYSICAL_LOCATION DESCRIPTION" | awk '{printf("%-8s %-7s %-12s %-6s %-9s %-10s\n %-79s\n %-80s\n",$1,$2,$3,$4,$5,$6,$7) }'
#echo "12345678012345678012345678012345678012345678012345678012345678012345678012345678"
echo "Type-Mod PartNumber SerialNum ECLevel Status ResourceName" | awk '{printf("%-8s %-12s %-12s %-12s %-9s %-12s\n",$1,$2,$3,$4,$5,$6)}'
#echo "PHYSICAL_LOCATION DESCRIPTION" | awk '{printf(" %-79s\n %-80s\n",$1,$2) }'

#################################################################################
# Output selected lscfg -v data for all devices in lsdev -C
#################################################################################
#for AX in `lsdev  | awk '(NR > 2 ) { print $1 }'`  
for AX in `lscfg | grep -v NONAME | awk '(NR > 9 ) { print $2 }  '`  
do
  #echo "doing it for device: $AX"
  # Save lscfg -l output with no header and no eol
  #LSCFG=`lscfg -l $AX | grep -v "DEVICE" | awk '{for(i=1;i<=NF;i++) printf("%s ",$i) }'`
   LSCFG=`lscfg | grep "$AX "`
  #echo " LSCFG was: $LSCFG"

  if [ -n "$LSCFG" ] ; then


    # CCIN 
    CC="N/A"
    echo $CC | awk '{printf("%-8s ",$1) }'

    # Part Number
    PN=`lscfg -vl $AX | grep "Part Number" | awk -F"." '{print $NF }'`
    if [ -z "$PN" ] ; then 
      PN="N/A"
    fi
    echo $PN | awk '{printf("%-12s ",$1) }'

    # Serial Number
    SN=`lscfg -vl $AX | grep "Serial Number" | awk -F"." '{print $NF }'`
    if [ -z "$SN" ] ; then 
      SN="N/A"
    fi
    echo $SN | awk '{printf("%-12s ",$1) }'

    # EC Level
    EC=`lscfg -vl $AX | grep "EC Level" | awk -F"." '{print $NF }'`
    if [ -z "$EC" ] ; then
      EC="N/A"
    fi
    echo $EC | awk '{printf("%-12s ",$1) }'

    # Status
    #ST=`lsdev -C -Fstatus -l $AX`
    #if [ -z "$ST" ] ; then 
    #  ST="Unknown"
    #fi
    ST="OK"
    echo $ST | awk '{printf("%-9s ",$1) }'

    # Device
    echo $AX | awk '{printf("%-12s\n ",$1) }'

    # Physical Location
    
    # AIX 5.2 lscfg gives physical instead of AIX address in second field
    #YL52=`echo $LSCFG | awk '{print $2}'`
    # AIX 5.2 has blank location field on "System Object", "System Planar", "Memory", and "L2 Cache"
    #YL52=`echo $YL52 | egrep -v "System|Memory|L2"`

    # if lscfg field 2 is the same as lsdev AIX address, it's pre AIX5.2, look for YL elsewhere
    # get  AIX Logical Address to determine type
    #PL=`lsdev -C -Flocation -l $AX`
    #if [[ $YL52 = $PL ]] ; then  
      YL=`lscfg -vl $AX | grep "(YL)" |sed -e "s/\.\./ /g" -e "s/ \./ /g" | awk '{print $NF }'`
    #else
    #  YL=`echo $YL52 | cut -c 1-20`
    #fi
    if [ -z "$YL" ] ; then 
      YL="N/A"
    fi

    echo $YL | awk '{printf("%-79s\n ",$1) }'

    # Description
      if [[ "$YL" = "N/A" ]] ; then
       echo $LSCFG | awk '{for(i=3;i<=NF;i++) printf("%s ",$i); printf("\n"); }'
      else
       echo $LSCFG | awk '{for(i=4;i<=NF;i++) printf("%s ",$i); printf("\n"); }'
      fi
  fi
done

#################################################################################
# Loop over list of detected scraid adapters to find attached devices
#################################################################################

#ST="N/A"
#YL="N/A"
#CC="N/A"
#PN="N/A"
#SN="N/A"
#for SCRAID in `lsdev -Ct14102e00 -Fname`
#do
  ## get adapter location
  #ADAPTER_LOC=`lsdev -C -l $SCRAID -Flocation`
#
  ## loop over list of detected hardfiles
  #scraidmgr -l $SCRAID -B | egrep ":O:|:S:|:G:" | sed -e "s/:/ /g" | \
    #sed -e "s/-/ /g" | awk {'print $1" "$2" "$4" "$6" "$8" "$9'} | \
    #while read DN STAT CHAN_ID SCSI_ID SIZE AX
    #do
      #
      ## Use generic device if not configured 
      #if [[ -z $AX ]]; then
         #AX=hdisk*                                               
      #fi
#
      ##Retrieve hdisk Serial number
      #SN=`scraidmgr -l $SCRAID -P -y $DN | grep "Unit S/N" | awk {'print $3'}`
#
      ##  Strip leading 0 from the SCSI ID
      #SCSI_ID=`echo $SCSI_ID | sed -e 's/^0//'`
##
      ## Create pseudo AIX description including size
	#DS="DRIVE SIZE COULD NOT BE DETERMINED BY MFGCFG SCRIPT"
	#if [[ $SIZE = "8679M" ]] ; then
      		#DS="16 Bit LVD SCSI Disk Drive (9100 MB)"
	#elif [[ $SIZE = "17357M" ]] ; then
		#DS="16 Bit LVD SCSI Disk Drive (18200 MB)"
	#elif [[ $SIZE = "34715M" ]] ; then
		#DS="16 Bit LVD SCSI Disk Drive (36400 MB)"
	#elif [[ $SIZE = "70007M" ]] ; then
		#DS="16 Bit LVD SCSI Disk Drive (73400 MB)"
	#elif [[ $SIZE = "140014M" ]] ; then
		#DS="16 Bit LVD SCSI Disk Drive (146800 MB)"
	#fi

	##if [[ $STAT = "G" ]] ; then
        #AX=safte*
	#DS="SCSI Accessed Fault-Tolerant Enclosure Device"
	#SN="N/A"
      	#fi
#
      #echo $CC | awk '{printf("%-8s ",$1) }'
      #echo $PN | awk '{printf("%-12s ",$1) }'
      ##echo $SN | awk '{printf("%-12s ",$1) }'
      #echo $ST | awk '{printf("%-9s ",$1) }'
      #echo $AX | awk '{printf("%-12s\n ",$1) }'
      #echo $YL | awk '{printf("%-79s\n ",$1) }'
      #echo $DS
    #done
#done


#################################################################################
# Output selected lscfg -pv platform specific data 
#################################################################################

# Initilize variables
#AX="N/A" 
#ST="N/A"
#YL="N/A"
#CC="N/A"
#PN="N/A"
#SN="N/A"
#NEWBLOCK=1
#
#lscfg -pv | egrep -p "Physical Location:|Memory Dimm:|Memory DIMM:|MS CUOD|IBM MS"| egrep -vp "Name:|irmware:|System VPD:|System:" | \
#while read LSCFGP
#do
  #if [ -z "$LSCFGP" ] ; then
    ## Blank line, output all data from previous block of data
      #echo $CC | awk '{printf("%-8s ",$1) }'
      #echo $PN | awk '{printf("%-12s ",$1) }'
      #echo $SN | awk '{printf("%-12s ",$1) }'
      #echo $ST | awk '{printf("%-9s ",$1) }'
      #echo $AX | awk '{printf("%-12s\n ",$1) }'
      #echo $YL | awk '{printf("%-79s\n ",$1) }'
      #echo $DS
    ## Reinitilize variables
    #AX="N/A"
    #YL="N/A"
    #PN="N/A"
    #CC="N/A"
    #SN="N/A"
    #NEWBLOCK=1
  #else
    #if [ $NEWBLOCK -eq 1 ] ; then
      ## Description
      #NEWBLOCK=0
      #DS=`echo $LSCFGP | sed -e "s/://g"`
    #else
#
      ## Physical Location
      #echo $LSCFGP | grep "(YL)" >/dev/null
      #if [ $? -eq 0 ] ; then
        #YL=`echo $LSCFGP |sed -e "s/\.\./ /g" -e "s/ \./ /g" | awk '{print $NF }'`
      #fi
#
      ## CCIN 
      #echo $LSCFGP | egrep "\(CC\)|Customer Card ID Number|Machine Type/Model" >/dev/null
      #if [ $? -eq 0 ] ; then
        #CC=`echo $LSCFGP | awk -F"." '{print $NF }'`
        #if [ -z "$CC" ] ; then 
          #CC="N/A"
        #fi
      #fi
#
      ## Part Number
      #echo $LSCFGP | grep "Part Number" >/dev/null
      #if [ $? -eq 0 ] ; then
        #PN=`echo $LSCFGP | awk -F"." '{print $NF }'`
        #if [ -z "$PN" ] ; then 
          #PN="N/A"
        #fi
      #fi
#
      ## Serial Number
      #echo $LSCFGP | egrep "Serial Number|Cabinet Serial No" >/dev/null
      #if [ $? -eq 0 ] ; then
        #SN=`echo $LSCFGP | awk -F"." '{print $NF }'`
        #if [ -z "$SN" ] ; then 
          #SN="N/A"
        #fi
      #fi
#
      #
    #fi
#
  #fi
#
#done

