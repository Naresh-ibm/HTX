#!/bin/ksh

# @(#)60	1.9  src/htx/usr/lpp/htx/setup/equaliser.setup, htx_sup, htxubuntu 1/4/16 23:26:04 

# Check if the equaliser configuration file is present

proc_ver=`cat /tmp/htx_syscfg | grep Version | awk -F: '{print $2}'`
proc_ver_dec=`printf %d $proc_ver`

#################################
# function create_mdt starts here
#################################
create_mdt()
{
    echo " Creating Equaliser mdt file $2 "
    ${HTXPATH}/bin/create_eq_mdt $1 $2
    echo " Backing up Equaliser config file in /tmp"
    cp $1 /tmp/
    echo " Backing up Equaliser mdt file in /tmp"
    cp $2 /tmp/
}
#############################
#funcion create_mdt ends here
#############################

#################################
#	Main code starts here	#
#################################

# If system is in shared processor mode, return. Don't create any cfg and mdt.
shared_proc_mode=`cat /tmp/htx_syscfg | grep shared_processor_mode | awk -F: '{print $2}'`
if [[ "$shared_proc_mode" = " yes" ]];
then
    echo "System is in shared processor mode. Will not create any equaliser cfg and mdt."
    exit
fi

# Creating mdt file corresponding to htx_eq.cfg which is the default equaliser file shipped.
# Used mainly for manual editing

if [ -f ${HTXPATH}/htx_eq.cfg ]
then
	create_mdt ${HTXPATH}/htx_eq.cfg ${HTXMDT}mdt.eq

else
	# If equaliser configuration file not present, print message and exit
	echo " Equaliser configuration file htx_eq.cfg not provided in /usr/lpp/htx/ "
	echo " Will not be able to create the equaliser mdt file mdt.eq"
fi

#=============================================================
# Creating all the cfg files.
# These files will be generated or P7 and above.
#=============================================================

# Remove all old cfg files.
for file in `/bin/ls $HTXLPP[a-zA-Z]*.cfg 2>/dev/null | grep -v "htx_eq\.cfg"`
do
    rm $file
done

if [[ $proc_ver_dec -ge 63 ]]
then
    ${HTXPATH}/bin/create_eq_cfg
fi

if [ -f ${HTXLPP}htx_eq_maxpwr_switch.cfg ]
then
    create_mdt ${HTXLPP}htx_eq_maxpwr_switch.cfg ${HTXMDT}mdt.eq_maxpwr_switch
fi
if [ -f ${HTXLPP}htx_eq_maxpwr_exp.cfg ]
then
    create_mdt ${HTXLPP}htx_eq_maxpwr_exp.cfg ${HTXMDT}mdt.eq_maxpwr_exp
fi
if [ -f ${HTXLPP}htx_eq_100_75_50_25_util.cfg ]
then
    create_mdt ${HTXLPP}htx_eq_100_75_50_25_util.cfg ${HTXMDT}mdt.eq_100_75_50_25_util
fi
#    if [ -f ${HTXLPP}htx_eq_cpu_mem_100.cfg ]
#    then
#        create_mdt ${HTXLPP}htx_eq_cpu_mem_100.cfg ${HTXMDT}mdt.eq_cpu_mem_100
#    fi
if [ -f ${HTXLPP}htx_eq_cpu_mem_50.cfg ]
then
    create_mdt ${HTXLPP}htx_eq_cpu_mem_50.cfg ${HTXMDT}mdt.eq_cpu_mem_50
fi

#Adding support for ewm cfgs
#===========================
if [ -f ${HTXLPP}htx_ewm_msrp_1p3m_28s_act_52s_idle.cfg ]
then
    create_mdt ${HTXLPP}htx_ewm_msrp_1p3m_28s_act_52s_idle.cfg ${HTXMDT}mdt.ewm_msrp_1p3m_28s_act_52s_idle
fi

if [ -f ${HTXLPP}htx_ewm_p8_8fd_char.cfg ]
then
    create_mdt ${HTXLPP}htx_ewm_p8_8fd_char.cfg ${HTXMDT}mdt.ewm_p8_8fd_char
fi

if [ -f ${HTXLPP}htx_ewm_p8_rdp_switch.cfg ]
then
    create_mdt ${HTXLPP}htx_ewm_p8_rdp_switch.cfg ${HTXMDT}mdt.ewm_p8_rdp_switch
fi

if [ -f ${HTXLPP}htx_ewm_p8_swicthing_cmp.cfg ]
then
    create_mdt ${HTXLPP}htx_ewm_p8_swicthing_cmp.cfg ${HTXMDT}mdt.ewm_p8_swicthing_cmp
fi

#========================================================================================
# Creating cfg and corresponding mdt files for generating test scenarios for thread transitioning 
# feature in p8. 2 testing scenarios are generated. Switching scenarios will be generated on p7 
# and above. While mixing/thread re-balancing scenario is targated for P8 pnly. Will be created only 
# for BML.
#==========================================================================================

if [ -f ${HTXPATH}/eq_th_trans_switch.cfg ]
then
    create_mdt ${HTXPATH}/eq_th_trans_switch.cfg ${HTXMDT}mdt.eq_th_trans_switch
fi
    
if [ -f ${HTXPATH}/eq_th_trans_mix.cfg ]
then
    create_mdt ${HTXPATH}/eq_th_trans_mix.cfg ${HTXMDT}mdt.eq_th_trans_mix
fi
#########################
#Main code ends here
#########################
    
    


