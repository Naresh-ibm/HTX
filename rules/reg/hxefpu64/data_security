* Rule file	for	hxefpu64 exerciser running on P7.
*
* This Rule	file is	for	"Data Security" shift. 
* T0 & T3 -	VSX	Scalar SP &	DP and BFP all interleaved
* T1 - BFP all
* T2 - VSX Scalar SP & DP
*
* For details of rule keywords,	please refer hxefpu64.readme
* in /usr/lpp/htx/rules/reg/hxefpu64 dir on	test machine.
*
* NOTE:	Rule keyword & associated value	should be all in one
*	line _only_. Currently '\n'	(newline) is used as
*	delimiter to differentiate between keywords.
*


* Data Security	shift with 100%	normal data

rule_id						ds_norm
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					2
unaligned_loads_stores_%	[20,30,20,30,20,30,20,30]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0xa, 0xa, 0xa,	0xa, 0xa, 0xa, 0xa, 0xa]
INS_BIAS_MASK				[(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50)]


* Data Security	shift with 50/50% normal/denormal data

rule_id						ds_n_dn
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					2
unaligned_loads_stores_%	[20,20,20,20,20,20,20,20]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55]
INS_BIAS_MASK				[(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50)]


* Data Security	shift with 100%	denormal data

rule_id						ds_denorm
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					2
unaligned_loads_stores_%	[30,30,30,30,30,30,30,30]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0]
INS_BIAS_MASK				[(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50)]


* Data Security	shift with mix of all data corners

rule_id						ds_all
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					2
unaligned_loads_stores_%	[20,30,20,30,20,30,20,30]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111]
INS_BIAS_MASK				[(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x0100000000000fff,50)(0x020000000007ffff,50):(0x020000000007ffff,100):(0x0100000000000fff,100):(0x0100000000000fff,50)(0x020000000007ffff,50)]

