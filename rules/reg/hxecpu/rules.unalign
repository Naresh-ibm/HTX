* IBM_PROLOG_BEGIN_TAG 
* This is an automatically generated prolog. 
*  
* htxltsbml src/htx/usr/lpp/htx/rules/reg/hxecpu/rules.unalign 1.1 
*  
* Licensed Materials - Property of IBM 
*  
* COPYRIGHT International Business Machines Corp. 2012 
* All Rights Reserved 
*  
* US Government Users Restricted Rights - Use, duplication or 
* disclosure restricted by GSA ADP Schedule Contract with IBM Corp. 
*  
* IBM_PROLOG_END_TAG 

* 70% unaligned and 30% aligned Fixed Point Loads & Stores 
rule_id						unalign_fxldst_r1
num_oper					5000
num_threads					0
seed						[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[70,70,70,70,70,70,70,70]
INS_BIAS_MASK               [(0x0500000000003041,100):(0x0500000000003041,100):(0x0500000000003041,100):(0x0500000000003041,100):(0x0500000000003041,100):(0x0500000000003041,100):(0x0500000000003041,100):(0x0500000000003041,100)]


* 70% unaligned and 30% aligned VSX Loads & Stores 
rule_id						unalign_vsxldst_r2
num_oper					5000
num_threads					0
seed						[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[70,70,70,70,70,70,70,70]
INS_BIAS_MASK               [(0x010000180000f003,100):(0x010000180000f003,100):(0x010000180000f003,100):(0x010000180000f003,100):(0x010000180000f003,100):(0x010000180000f003,100):(0x010000180000f003,100):(0x010000180000f003,100)]


* 70% unaligned and 30% aligned BFP Loads & Stores 
rule_id						unalign_bfpldst_r3
num_oper					5000
num_threads					0
seed						[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[70,70,70,70,70,70,70,70]
INS_BIAS_MASK               [(0x020000000000003f,100):(0x020000000000003f,100):(0x020000000000003f,100):(0x020000000000003f,100):(0x020000000000003f,100):(0x020000000000003f,100):(0x020000000000003f,100):(0x020000000000003f,100)]

* 70% unaligned and 30% aligned DFP Loads & Stores 
rule_id						unalign_dfpldst_r4
num_oper					5000
num_threads					0
seed						[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[70,70,70,70,70,70,70,70]
INS_BIAS_MASK               [(0x0300000018000000,100):(0x0300000018000000,100):(0x0300000018000000,100):(0x0300000018000000,100):(0x0300000018000000,100):(0x0300000018000000,100):(0x0300000018000000,100):(0x0300000018000000,100)]


* 70% unaligned and 30% aligned VMX Loads & Stores 
rule_id						unalign_vmxldst_r5
num_oper					5000
num_threads					0
seed						[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[70,70,70,70,70,70,70,70]
INS_BIAS_MASK               [(0x0400000000000007,100):(0x0400000000000007,100):(0x0400000000000007,100):(0x0400000000000007,100):(0x0400000000000007,100):(0x0400000000000007,100):(0x0400000000000007,100):(0x0400000000000007,100)]


* 70% unaligned and 30% aligned all categories Loads & Stores 
rule_id						unalign_allldst_r6
num_oper					5000
num_threads					0
seed						[0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[70,70,70,70,70,70,70,70]
INS_BIAS_MASK               [(0x0500000000000041,20)(0x010000180000f003,20)(0x020000000000003f,20)(0x0300000018000000,20)(0x0400000000000007,20):(0x0500000000000041,20)(0x010000180000f003,20)(0x020000000000003f,20)(0x0300000018000000,20)(0x0400000000000007,20):(0x0500000000000041,20)(0x010000180000f003,20)(0x020000000000003f,20)(0x0300000018000000,20)(0x0400000000000007,20):(0x0500000000000041,20)(0x010000180000f003,20)(0x020000000000003f,20)(0x0300000018000000,20)(0x0400000000000007,20):(0x0500000000000041,20)(0x010000180000f003,20)(0x020000000000003f,20)(0x0300000018000000,20)(0x0400000000000007,20)]
