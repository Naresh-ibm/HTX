*******************************************************************************
*******************************************************************************
*---------------------------------------------------------------------------*
*- STANZA 1: Sequentially write the entire disk on every 6th iteration of  -*
*-           the rules file. This stanza will run in the background while  -*
*-           other stanza in the rules file are running.                   -*
*---------------------------------------------------------------------------*
rule_id = SEQBWRC1
pattern_id = #003
addr_type = seq
num_oper = 0
oper = bwrc
type_length = fixed
num_blks = 512
starting_block = 0
direction = up
no_mallocs = 1
crash_on_mis = yes
increment = 0
skip = -6

*---------------------------------------------------------------------------*
*- STANZA 2: Sleep for 2 minutes on every 6th iteration of the rules file. -*
*-           This lets the background thread (STANZA 1) initialize an area -*
*-           of the disk before the other rule stanzas start.              -*
*---------------------------------------------------------------------------*
rule_id = SLEEP2
oper = s
sleep = 120000000
skip = -6

*---------------------------------------------------------------------------*
*- STANZA 3: Sequentially compare the entire disk on every 5th iteration   -*
*-           of the rules file.                                            -*
*---------------------------------------------------------------------------*
rule_id = SEQRDC3
pattern_id = #003
addr_type = seq
num_oper = 0
oper = rc
type_length = fixed
num_blks = 128
starting_block = 0
direction = up
no_mallocs = 10
crash_on_mis = yes
increment = 0
skip = 5

*---------------------------------------------------------------------------*
*- STANZA 4: Do a butterfly test on the drive on every 5 iteration of the  -*
*-           rules file. This will cause the drive to seek from the outer  -*  
*-           limits of the drive to the inner limits of the drive.         -*
*---------------------------------------------------------------------------*
rule_id = BUTRFLY4
pattern_id = #003
addr_type = seq
num_oper = 0
oper = w
type_length = fixed
num_blks = 126
starting_block = bot
direction = in
no_mallocs = 1
crash_on_mis = yes
increment = 0
skip = 5

*---------------------------------------------------------------------------*
*- STANZA 5: Do random read compare 20000 times. - Thread 1                -*
*---------------------------------------------------------------------------*
rule_id = READCMP5
pattern_id = #003
addr_type = random
num_oper = 20000
oper = rc
type_length = random
num_blks = 12
no_mallocs = 4
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 6: Do random read compare 20000 times. - Thread 2                -*
*---------------------------------------------------------------------------*
rule_id = READCMP6
pattern_id = #003
addr_type = random
num_oper = 20000
oper = rc
type_length = fixed
num_blks = 64
no_mallocs = 4
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 7: Do random read write read compare 20000 times. - Thread 3     -*
*---------------------------------------------------------------------------*
rule_id = RDWRRDC7
pattern_id = #003
addr_type = random
num_oper = 20000
oper = rwrc
type_length = random
num_blks = 20
no_mallocs = 4
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 8: Do random write read compare 10000 times. - Thread 4          -*
*---------------------------------------------------------------------------*
rule_id = RANDWRC8
pattern_id = #003
addr_type = random
num_oper = 10000
oper = wrc
type_length = fixed
num_blks = 64
no_mallocs = 4
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 9: Do random read compare 20000 times. - Thread 5                -*
*---------------------------------------------------------------------------*
rule_id = READCMP9
pattern_id = #003
addr_type = random
num_oper = 20000
oper = rc
type_length = fixed
num_blks = 128
no_mallocs = 4
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 10: Do random read compare 20000 times. - Thread 6               -*
*---------------------------------------------------------------------------*
rule_id = RDCMP10
pattern_id = #003
addr_type = random
num_oper = 20000
oper = rc
type_length = random
num_blks = 4
no_mallocs = 4
crash_on_mis = yes
start_stanza = yes

*---------------------------------------------------------------------------*
*- STANZA 11: Do sequential read compare 20000 times. Start of a new       -*
*-            sequence of threads. - Thread 1                              -*
*---------------------------------------------------------------------------*
rule_id = SEQRC11
pattern_id = #003
addr_type = seq
num_oper = 20000
oper = rc
type_length = fixed
num_blks = 8
no_mallocs = 8
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 12: Do sequential write 20000 times. - Thread 2                  -*
*---------------------------------------------------------------------------*
rule_id = SEQWR12
pattern_id = #003
addr_type = seq
num_oper = 20000
oper = w
type_length = fixed
num_blks = 8
no_mallocs = 8
crash_on_mis = yes
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 13: Do sequential read compare 20000 times. - Thread 3           -*
*---------------------------------------------------------------------------*
rule_id = SEQRC13
pattern_id = #003
addr_type = seq
num_oper = 20000
oper = rc
type_length = fixed
num_blks = 8
no_mallocs = 8
crash_on_mis = yes
start_stanza = yes

*---------------------------------------------------------------------------*
*- STANZA 14: Do 20000 random writes of pattern #004                       -*
*---------------------------------------------------------------------------*
rule_id = RANDWR14
pattern_id = #004
addr_type = random
num_blks = 32
oper = w
num_oper = 20000
type_length = random
rule_options = save_seeds
no_mallocs = 10
crash_on_mis = yes

*---------------------------------------------------------------------------*
*- STANZA 15: Do 20000 random read compares of pattern #004                -*
*---------------------------------------------------------------------------*
rule_id = RDCMP15
pattern_id = #004
addr_type = random
num_blks = 32
oper = rc
num_oper = 20000
type_length = random
rule_options = restore_seeds
no_mallocs = 10
crash_on_mis = yes

*---------------------------------------------------------------------------*
*- STANZA 16: Reinitializes disk to pattern #003 using same seeds as the   -*  
*-            previous 2 stanzas.                                          -*  
*---------------------------------------------------------------------------*
rule_id = RANDWR16
pattern_id = #003
addr_type = random
num_blks = 32
oper = w
num_oper = 20000
type_length = random
rule_options = restore_seeds
no_mallocs = 10
crash_on_mis = yes

*---------------------------------------------------------------------------*
*- STANZA 17: Do 20000 random read operations.                             -*
*---------------------------------------------------------------------------*
rule_id = RANDRD17
addr_type = random
num_oper = 20000
oper = r
type_length = fixed
num_blks = 32
no_mallocs = 10
crash_on_mis = yes

*---------------------------------------------------------------------------*
*- STANZA 18: Do 20000 random writes of pattern #005                       -*
*---------------------------------------------------------------------------*
rule_id = RANDWR18
pattern_id = #005
addr_type = random
num_oper = 20000
oper = w
type_length = fixed
num_blks = 128
rule_options = save_seeds
no_mallocs = 6
crash_on_mis = yes

*---------------------------------------------------------------------------*
* STANZA 19: Do 20000 random read compares of pattern #005                 -*
*---------------------------------------------------------------------------*
rule_id = RANDRC19
pattern_id = #005
addr_type = random
num_oper = 20000
oper = rc
type_length = fixed
num_blks = 128
rule_options = restore_seeds
no_mallocs = 6
crash_on_mis = yes

*---------------------------------------------------------------------------*
*- STANZA 20: Reinitializes disk to #003 using same seeds as the previous  -*  
*-            2 stanzas.                                                   -*
*---------------------------------------------------------------------------*
rule_id = RANDWR20
pattern_id = #003
addr_type = random
num_oper = 20000
oper = w
type_length = fixed
num_blks = 128
rule_options = restore_seeds
no_mallocs = 6
crash_on_mis = yes

