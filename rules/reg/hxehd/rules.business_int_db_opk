* hxehd rules file for creating customer like load environment. off peak workload
* Business intelligence database off peak
* Requirements:
*
*  Sequential IO
*  256K-1MB (random) : transfer size
*  number of threads: 4-8
*
*
*******************************************************************************
*---------------------------------------------------------------------------*
*- STANZA 1: Sequentially write the entire disk on every 6th iteration of  -*
*-           the rules file. This stanza will run in the background while  -*
*-           other stanza in the rules file are running.                   -*
*---------------------------------------------------------------------------*
rule_id = SEQBWRC1
pattern_id = #003
addr_type = seq
num_oper = 0
oper = bwrc
type_length = fixed
num_blks = 1024
starting_block = 0
direction = up
no_mallocs = 1
turn_attention_on = no
increment = 0
skip = -10

*----------------------------------------------------------------------------*
*- STANZA 2: Sleep for 4 minutes on every 10th iteration of the rules file. -*
*-           This lets the background thread (STANZA 1) initialize an area  -*
*-           of the disk before the other rule stanzas start.               -*
*---------------------------------------------------------------------------*
rule_id = SLEEP2
oper = s
sleep = 240000000
skip = -10

*---------------------------------------------------------------------------*
*- STANZA 3: Do sequential read compare 50000 times. - Thread 1            -*
*---------------------------------------------------------------------------*
rule_id = SEQRC3
pattern_id = #003
addr_type = seq
num_oper = 50000
oper = rc
type_length = random
num_blks = 512
no_mallocs = 16
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 4: Do sequential read compare 50000 times. - Thread 2            -*
*---------------------------------------------------------------------------*
rule_id = SEQRC4
pattern_id = #003
addr_type = seq
num_oper = 50000
oper = rc
type_length = fixed
num_blks = 256
no_mallocs = 4
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 5: Do sequential read compare 50000 times. - Thread 3            -*
*---------------------------------------------------------------------------*
rule_id = SEQRC5
pattern_id = #003
addr_type = seq
num_oper = 50000
oper = rc
type_length = fixed
num_blks = 1024
no_mallocs = 16 
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 6: Do sequential  read compare 50000 times. - Thread 4           -*
*---------------------------------------------------------------------------*
rule_id = SEQRC6
pattern_id = #003
addr_type = seq 
num_oper = 50000
oper = rc 
type_length = fixed 
num_blks = 2048 
no_mallocs = 16 
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 7: Do sequential read compare 50000 times. - Thread 5            -*
*---------------------------------------------------------------------------*
rule_id = SEQRC7
pattern_id = #003
addr_type = seq
num_oper = 50000
oper = rc
type_length = random
num_blks = 2048
no_mallocs = 24
start_stanza = no

*---------------------------------------------------------------------------*
*- STANZA 8: Do sequential read 50000 times. - Thread 6                    -*
*---------------------------------------------------------------------------*
rule_id = SEQRC8
pattern_id = #003
addr_type = seq
num_oper = 50000
oper = r
type_length = random
num_blks = 1024
no_mallocs = 32 
start_stanza = yes
