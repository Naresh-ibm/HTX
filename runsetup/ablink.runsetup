#!/bin/ksh
proc_ver=`cat ${HTX_LOG_DIR}/syscfg | grep Version | awk -F: '{print $2}'`
proc_ver_dec=`printf %d $proc_ver`

if [[ $proc_ver_dec -ge 78 ]]
then
	echo "ablink.runsetup: runsetup is not needed for P9 and obove, exiting..." >> $HTXNoise
	exit
fi

cur_mdt=`echo ${HTXMDT}mdt`
rules_file=`cat $cur_mdt | grep reg_rules | grep hxefabricbus | cut -d' ' -f3 | tr -d ' " '`
cur_rule=${HTXREGRULES}${rules_file}
mem_alloc=`cat $cur_rule | grep -v "*" | grep memory_allocation | cut -f2 -d= | tr -d ' " '` 

if [ $? -ne 0 ] 
then 
	echo "Inappropriate rules file selected \n" 
	exit  
fi
 
# Find out the number of 16M pages required for Fabricbus
${HTXBIN}/hxefabricbus A B $cur_rule query_pages >/dev/null 2>&1

# Find no of threads from ${HTX_LOG_DIR}/fabricbus_mem_req
if [ -f ${HTX_LOG_DIR}/fabricbus_mem_req_$mem_alloc ] 
then 
	ablink_required_pages=`cat -q ${HTX_LOG_DIR}/fabricbus_mem_req_$mem_alloc ` 
else
	echo "${HTX_LOG_DIR}/fabricbus_mem_req_$mem_alloc doesnt exist \n" 
	exit 
fi


#Init vars
new_total_pages=0
reconstruct_freepages_file=0

current_total_mem=`svmon -G | grep "16 M" | tail -1 |awk ' {print $4}' | sed 's/@//'`
[ -z "$current_total_mem" ] && current_total_mem=0
avail_16M=$current_total_mem

# current_avail_mem , even if larger than mem_16M(min reqd for mem), is available for hxemem64 to use.
current_avail_mem=`grep free_16M ${HTX_LOG_DIR}/freepages | cut -d "=" -f4 | cut -d "," -f1`

# Find 16M pages reserved for mem and cache
mem_16M=`cat ${HTX_LOG_DIR}/freepages | grep mem_16M | cut -d "=" -f2 `
cache_16M=`grep cache_16M ${HTX_LOG_DIR}/freepages  | cut -d "=" -f2 `
tlbie_16M=`grep tlbie_16M ${HTX_LOG_DIR}/freepages | cut -d "=" -f2 `

# Requirement now includes Fabric Bus
#required_free_pages=`expr $ablink_required_pages + $mem_16M + $cache_16M`
required_free_pages=$ablink_required_pages

is_mem_present=`grep : $cur_mdt | grep mem | wc -l | tr -d ' '`
is_cache_present=`grep : $cur_mdt | grep cache | wc -l | tr -d ' '`
is_tlbie_present=`grep : $cur_mdt | grep tlbie | wc -l | tr -d ' '`

#echo "is_mem_present = $is_mem_present, is_cache_present = $is_cache_present" 
if [ $is_mem_present -gt 0 ]
then
    required_free_pages=`expr $required_free_pages + $mem_16M`
    #echo "mem_present" $required_free_pages
fi

if [ $is_cache_present -gt 0 ]
then
    required_free_pages=`expr $required_free_pages + $cache_16M`
    #echo "cache_present" $required_free_pages
fi

if [ $is_tlbie_present -gt 0 ]
then
    required_free_pages=`expr $required_free_pages + $tlbie_16M`
    #echo "tlbie_present" $required_free_pages
fi


if [ $current_total_mem -lt $required_free_pages ]
then
    new_total_pages=$required_free_pages
    #Pre-set for writing to freepages. Effectively, free_16M is mem_16M
    free_16M=$mem_16M
fi

if [ $new_total_pages != 0 ]
then
    avail_16M=$new_total_pages
    echo "Configuring 16M page pool for Fabricbus Exer. Current_16M=$current_total_mem, Required_16M=$required_free_pages"
	echo "This may take couple of minutes. Please Wait ....."
    vmo -p -o lgpg_regions=$new_total_pages -o lgpg_size=16777216 -o v_pinshm=1 
    if [ $? != 0 ]
    then
        echo "vmo command failed"
        exit
    fi
    echo "Running bosboot command for fabricbus exer. Please wait....."
    bosboot -a
    if [ $? != 0 ]
    then
        echo "bosboot command failed"
    fi
fi

# Reconstruct ${HTX_LOG_DIR}/freepages
#avail_16M set above
#free_16M set above
avail_16G=`cat ${HTX_LOG_DIR}/freepages | grep avail_16G | cut -d "=" -f3 | cut -d "," -f1 | sed 's/@//'`
[ -z "$avail_16G" ] && avail_16G=0
free_16G=`cat ${HTX_LOG_DIR}/freepages | grep free_16G | cut -d "=" -f5`
[ -z "$free_16G" ] && free_16G=0
echo "avail_16M=$avail_16M,avail_16G=$avail_16G,free_16M=$mem_16M,free_16G=$free_16G" > ${HTX_LOG_DIR}/freepages
echo "mem_16M=$mem_16M" >> ${HTX_LOG_DIR}/freepages
echo "cache_16M=$cache_16M" >> ${HTX_LOG_DIR}/freepages
echo "tlbie_16M=$tlbie_16M" >> ${HTX_LOG_DIR}/freepages
echo "fabricbus_16M=$ablink_required_pages" >> ${HTX_LOG_DIR}/freepages

