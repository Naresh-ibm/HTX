* @(#)28	1.2  src/htx/usr/lpp/htx/rules/reg/hxestorage/default.worm, exer_storage, htxubuntu 3/10/15 13:19:03 *
*---------------------------------------------------------------------------*
*-This is the default stanza for the WORM ( Write-Once, Read Many ) UDO Media.
*-Since we can only write once to this media, the BWRC stanza's skip count is
*-made -99999999 so that it runs only once in the life time of the exer.
*-All other stanzas are RC stanzas, which does Read Compares only.
*---------------------------------------------------------------------------*
*---------------------------------------------------------------------------*
*- STANZA 1: Sequentially write the entire disk once as skip is very large -*
*-           so, this stanza should not run again unless test is run for a -*
*-           very long time. This stanza will run in the background while  -*
*-           other stanza in the rules file are running. Creates 1QD       -*
*-           threads, each doing oper in its own section.                  -*   
*---------------------------------------------------------------------------*
rule_id = rule_1
pattern_id = #003
num_threads = 1QD 
num_oper = 0
oper = bwrc
transfer_size = 128K
seek_breakup_prcnt = 0
direction = up down
starting_block = BOT TOP
skip = -999999999
section = yes

*---------------------------------------------------------------------------*
*- STANZA 2: Sleep for 5 minutes whenever stanza 1 of rule file is run.    -*
*-           This lets the background thread (STANZA 1) initialize an area -*
*-           of the disk before the other rule stanzas start.              -*
*---------------------------------------------------------------------------*
rule_id = rule_2
oper = s
sleep = 300000000
skip = -99999999

*---------------------------------------------------------------------------*
*- STANZA 3: Creates 1QD threads and do random read compare opers 40000    -*
*- times. Each threas doing random transfer size between 1BLK-256K.        -*
*---------------------------------------------------------------------------*
rule_id = rule_3
pattern_id = #003
num_threads = 1QD
num_oper = 40000
oper = rc 
transfer_size = [1BLK-256K,-1] 
seek_breakup_prcnt = 100 

*---------------------------------------------------------------------------*
*- STANZA 4: Creates 1QD threads and do SEQ read compare opers 40000         -*
*- times of size 128K.                                                     -*
*---------------------------------------------------------------------------*
rule_id = rule_3
pattern_id = #003
num_threads = 1QD 
num_oper = 40000
oper = rc 
transfer_size = 128K
direction = up down
starting_block = BOT TOP
seek_breakup_prcnt = 0 
section = yes

