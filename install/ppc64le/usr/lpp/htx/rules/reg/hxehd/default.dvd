*  "@(#)05 1.3.4.1 src/htx/usr/lpp/htx/rules/reg/hxehd/default.dvd, exer_hd, htxubuntu 7/25/13 05:35:03" *
*******************************************************************************
* COMPONENT_NAME: EXER_HD_LX
*******************************************************************************
*-                                                                          -*
*- This file should be reviewed completely before modification.  The        -*
*- stanzas are grouped by function, but are not necessarily in the order    -*
*- which they run in.  See the "skip" keyword in each stanza.  Each group   -*
*- has an introduction explaining.                                          -*
*-                                                                          -*
*----------------------------------------------------------------------------*
*-                                                                          -*
*-  Stanza Name     Skip  Start Stanza   Runs on                            -*
*-                                                                          -*
*-  SEQW1            9     Y             every 9th                          -*
*-  SEQRC2           9     N                                                -*
*-  READCMP3         9     N                                                -*
*-  READCMP4         9     N                                                -*
*-  RDWRC5           9     N                                                -*
*-  RDCMP6           9     N                                                -*
*-  RDCMP7           9     Y                                                -*
*-                                                                          -*
*-  INITOP10         -99   Y             First and every 99th pass.         -*
*-  INITBT11         -99   Y                                                -*
*-                                                                          -*
*-  RNRCBT12         -1    Y             Passes  1, 3, 5, 7, ...            -*
*-  RNRCTP13         -1    Y                                                -*
*-  BFYRC14          -1    Y                                                -*
*-  BFYWRC15         -1    Y                                                -*
*-                                                                          -*
*-  SQDB6P16         2     Y             Passes  2, 4, 6, 8, ...            -*
*-  SQM1P17          2     Y                                                -*
*-  SQ4P18           2     Y                                                -*
*-  SQCLP19          2     Y                                                -*
*-                                                                          -*
*-  SQSBRC20         3     Y             Passes  3, 6, 9, 12, ...           -*
*-  SQSBRC21         3     Y                                                -*
*-  SQSBRC22         3     Y                                                -*
*-  RNSBRC23         3     Y                                                -*
*-                                                                          -*
*-  SQI2W24          4    Y              Passes  4, 8, 12, 16, ...          -*
*-  SQI2RC25         4    N                                                 -*
*-  SQI2RC26         4    Y                                                 -*
*-  SQCLI27          4    Y                                                 -*
*-                                                                          -*
*----------------------------------------------------------------------------*
*----------------------------------------------------------------------------*
*- Stanzas 1 - 5 run every 9th interation of the rules.                     -*
*- The whole disk initialzation stanza put a pattern down so that random    -*
*- addressing can be used in Read & Compare rules (oper = rc).              -*
*-                                                                          -*
*- The stanzas which depend upon it follow immediately.                     -*
*-                                                                          -*
*----------------------------------------------------------------------------*
*- STANZA 1: Sequentially write the entire disk on every  9th iteration of  -*
*-           the rules file.                                                -*
*-           This is first because it is traditionally here.                -*
*----------------------------------------------------------------------------*
rule_id = SEQW1  
pattern_id = #003 
addr_type = seq
num_oper = 0
oper = w
type_length = fixed
num_blks = 512
starting_block = 0
direction = up
skip = 9

*----------------------------------------------------------------------------*
*- STANZA 2: Sequentially read and compare the disk on    9th iteration of  -*
*-           the rules file. This stanza will run with the others below.    -*
*-                                                                Thread 1  -*
*----------------------------------------------------------------------------*
rule_id = SEQRC2  
pattern_id = #003 
addr_type = seq
num_oper = 0
oper = rc
type_length = fixed
num_blks = 512
starting_block = 0
direction = up
start_stanza = no
skip = 9

*---------------------------------------------------------------------------*
*- STANZA 3: Do random read compare of 32 blocks 2048 times.     Thread 2  -*
*-                                                     < 128MB Transfer    -*
*---------------------------------------------------------------------------*
rule_id = READCMP3
pattern_id = #003
addr_type = random
num_oper = 2048
starting_block = 0
oper = rc 
type_length = random
num_blks = 32
start_stanza = no
skip = 9

*---------------------------------------------------------------------------*
*- STANZA 4: Do random read compare of 4 blocks 4096 times.      Thread 3  -*
*-                                                       32MB Transfer     -*
*---------------------------------------------------------------------------*
rule_id = READCMP4
pattern_id = #003
addr_type = random
num_oper = 4096
starting_block = 0
oper = rc 
type_length = fixed
num_blks = 4
start_stanza = no
skip = 9

*---------------------------------------------------------------------------*
*- STANZA 5: Do sequential Read Write Read Compare of 4 blocks 1024 times. -*
*-                                24 MB Transfer                 Thread 4  -*
*---------------------------------------------------------------------------*
rule_id = RDWRRDC5
pattern_id = #003
addr_type = seq
num_oper = 1024
starting_block = 0
oper = rwrc 
type_length = fixed
num_blks = 4
start_stanza = no
skip = 9

*---------------------------------------------------------------------------*
*- STANZA 6: Do sequential read compare from lowest LBA.  Random length    -*
*-           Maximum stanza transfer < 32MB.              Thread 5         -*
*---------------------------------------------------------------------------*
rule_id = RDCMP6
pattern_id = #003
addr_type = seq
starting_block = bot
direction = up
num_oper = 4096
oper = rc 
type_length = random
num_blks = 4
start_stanza = no
skip = 9 

*---------------------------------------------------------------------------*
*- STANZA 7: Do sequential read compare from highest LBA.  Random length   -*
*-           Maximum stanza transfer < 32MB.              Thread 6         -*
*---------------------------------------------------------------------------*
rule_id = RDCMP7
pattern_id = #003
addr_type = seq
starting_block = top
direction = down
num_oper = 4096
oper = rc 
type_length = random
num_blks = 4
start_stanza = yes
skip = 9

*---------------------------------------------------------------------------*
*- The next two stanzas run every time, they initialize a small area at the-*
*- top and bottom of the disk.                                             -*
*---------------------------------------------------------------------------*
*- STANZA 10: Write a pattern on the 32MB of the highest LBAs on the disk. -*
*-           This runs the first time, and then probably not again, but    -*
*-           when the run is long enough, every 99th pass.                 -*
*---------------------------------------------------------------------------*
rule_id = INITOP10
pattern_id = #003
addr_type = seq
num_oper = 32
oper = wrc
type_length = fixed
num_blks = 512
starting_block = top
direction = down
skip = -99

*---------------------------------------------------------------------------*
*- STANZA 11: Write a pattern on the 128MB of the lowest LBAs on the disk. -*
*-           This runs the first time, and then probably not again, but    -*
*-           when the run is long enough, every 99th pass.                 -*
*---------------------------------------------------------------------------*
rule_id = INITBT11
pattern_id = #003
addr_type = seq
num_oper = 128
oper = w
type_length = fixed
num_blks = 512
starting_block = bot
direction = up
skip = -99

*---------------------------------------------------------------------------*
*- The next four stanzas run on odd passes through the rules and depend    -*
*- upon the previous two stanzas.                                          -*
*---------------------------------------------------------------------------*
*- STANZA 12: Read & Compare 8 blocks 2000 time using random addresses and -*
*-            lengths.  It is restricted to the lower 128MB of the disk.   -*
*---------------------------------------------------------------------------*
rule_id = RNRCBT12
pattern_id = #003
addr_type = random
num_oper = 2000 
min_blkno = 0
max_blkno = 65536
oper = rc
type_length = random
num_blks = 8
starting_block = bot
skip = -1

*---------------------------------------------------------------------------*
*- STANZA 13: Read & Compare 8 blocks 2000 times using sequential addresses-*
*-            and random lengths.  It operates on the upper 32MB of the    -*
*-            disk.                                                        -*
*---------------------------------------------------------------------------*
rule_id = RNRCTP13
pattern_id = #003
addr_type = seq
num_oper = 2000
oper = rc
type_length = random
num_blks = 8
starting_block = top
direction = down
skip = -1

*---------------------------------------------------------------------------*
*- STANZA 14: Butterfly from outer edges.                                  -*
*-            Read compare 64 blocks 128 times. 32MB Transfer              -*
*---------------------------------------------------------------------------*
rule_id = BFYRC14
pattern_id = #003
addr_type = seq
num_oper = 128
oper = rc
type_length = fixed
num_blks = 64
starting_block = bot
direction = in
skip = -1

*---------------------------------------------------------------------------*
*- STANZA 15: Butterfly from middle outward.                               -*
*-            Write, Read & Compare 64 blocks 64 times. 16MB Transfer      -*
*---------------------------------------------------------------------------*
rule_id = BFYRC15
pattern_id = #003
addr_type = seq
num_oper = 64
oper = wrc
type_length = fixed
num_blks = 64
starting_block = mid
direction = out
skip = -1

*---------------------------------------------------------------------------*
*- The next four stanzas run on even passes through the rules.             -*
*- These do Write, Read, and Compare of patterns HXPDB6 (0xdb6db6db, etc), -*
*- CDM102 (random data from diagnostic test CD, see /usr/lpp/htx/patterns),-*
*- #004 (timestamped 0xA5's)                                               -*
*---------------------------------------------------------------------------*
*- STANZA 16: Write, Read & Compare 1MB, 8 times using pattern HXPDB6      -*
*---------------------------------------------------------------------------*
rule_id = SQDB6P16
pattern_id = HXPDB6
addr_type = seq
num_oper = 8
oper = wrc
type_length = fixed
num_blks = 512
min_blkno = .7
max_blkno = .8
starting_block = 0
skip = 2

*---------------------------------------------------------------------------*
*- STANZA 17: Write, Read & Compare 1MB, 8 times using pattern CDM102      -*
*---------------------------------------------------------------------------*
rule_id = SQM1P17
pattern_id = CDM102
addr_type = seq
num_oper = 8
oper = wrc
type_length = fixed
num_blks = 512
min_blkno = .7
max_blkno = .8
starting_block = 0
skip = 2

*---------------------------------------------------------------------------*
*- STANZA 18: Write, Read & Compare 1MB, 8 times using pattern #004 (0xA5) -*
*---------------------------------------------------------------------------*
rule_id = SQM1P18
pattern_id = #004
addr_type = seq
num_oper = 8
oper = wrc
type_length = fixed
num_blks = 512
min_blkno = .7
max_blkno = .8
starting_block = 0
skip = 2

*---------------------------------------------------------------------------*
*- STANZA 19: Cleanup, write pattern #003                                  -*
*---------------------------------------------------------------------------*
rule_id = SQCLP19
pattern_id = #003
addr_type = seq
num_oper = 8
oper = w
type_length = fixed
num_blks = 512
min_blkno = .7
max_blkno = .8
starting_block = 0
skip = 2

*---------------------------------------------------------------------------*
*- The next four stanzas run on every 3rd pass through the rules.          -*
*- These do Read & Compare of small blocks                                 -*
*---------------------------------------------------------------------------*
*- STANZA 20: Read & Compare 2 blocks 1024 times, from middle going down.  -*
*-                                                          4MB Transfer   -* 
*---------------------------------------------------------------------------*
rule_id = SQSBRC20
pattern_id = #003
addr_type = seq
num_oper = 1024
oper = rc
type_length = fixed
num_blks = 2
starting_block = mid
direction = down
skip = 3

*---------------------------------------------------------------------------*
*- STANZA 21: Read & Compare 2 blocks 1024 times, from top going down.     -*
*-                                                          4MB Transfer   -* 
*---------------------------------------------------------------------------*
rule_id = SQSBRC21
pattern_id = #003
addr_type = seq
num_oper = 1024
oper = rc
type_length = fixed
num_blks = 2
starting_block = top
direction = down
skip = 3

*---------------------------------------------------------------------------*
*- STANZA 22: Read & Compare  8 blocks 512 times, on lower 8MB of disk.    -*
*-            Random transfer sizes.                        < 8MB Transfer -*
*---------------------------------------------------------------------------*
rule_id = SQSBRC22
pattern_id = #003
addr_type = seq
num_oper = 512
oper = rc
type_length = random
num_blks = 8
starting_block = 0
direction = up
skip = 3

*---------------------------------------------------------------------------*
*- STANZA 23: Read & Compare 4k, 512 times, 2MB, random addresses, lower   -*
*-           128MB of disk.                                 2MB Transfer   -*
*---------------------------------------------------------------------------*
rule_id = RNSBRC23
pattern_id = #003
addr_type = random
num_oper = 512
oper = rc
type_length = fixed
num_blks = 2
starting_block = 0
max_blkno = 65536
skip = 3

*---------------------------------------------------------------------------*
*- The next four stanzas run on every 4th pass through the rules.          -*
*- The first does 2 block writes of pattern #004 with two blocks in        -*
*- between.  The next two read and compare the area and then the final     -*
*- stanza cleans up by writing pattern #003 over the region.               -*
*---------------------------------------------------------------------------*
*- STANZA 24: Write 2 blocks of pattern #004 with 2 block interleaving     -*
*-            1024 times.                                   4MB Transfer   -*
*---------------------------------------------------------------------------*
rule_id = SQI2W24
pattern_id = #004
addr_type = seq
num_oper = 1024
oper = w
type_length = fixed
num_blks = 2
starting_block = 2
increment = 2
direction = up
start_stanza = yes
skip = 4

*---------------------------------------------------------------------------*
*- STANZA 25: Read & Compare 2 blocks of pattern #003 with 2 block         -*
*-            interleaving 1024 times starting LBA 0.       4MB Transfer   -*
*-                                                          Thread 1       -*
*---------------------------------------------------------------------------*
rule_id = SQI2RC25
pattern_id = #003
addr_type = seq
num_oper = 1024
oper = rc
type_length = fixed
num_blks = 2
starting_block = 0
increment = 2
direction = up
start_stanza = no
skip = 4

*---------------------------------------------------------------------------*
*- STANZA 26: Read & Compare 2 blocks of pattern #004 with 2 block         -*
*-            interleaving 1024 times starting LBA 2.       4MB Transfer   -*
*-                                                          Thread 2       -*
*---------------------------------------------------------------------------*
rule_id = SQI2RC26
pattern_id = #004
addr_type = seq
num_oper = 1024
oper = rc
type_length = fixed
num_blks = 2
starting_block = 2
increment = 2
direction = up
start_stanza = yes
skip = 4

*---------------------------------------------------------------------------*
*- STANZA 27: Cleanup, Write 512 blocks 8 times restoring the data to      -*
*-            pattern #003.                               8MB Transfer     -*
*---------------------------------------------------------------------------*
rule_id = SQCLI27
pattern_id = #003
addr_type = seq
num_oper = 8
oper = w
type_length = fixed
num_blks = 512
starting_block = 0
direction = up
start_stanza = yes
skip = 4

