* Rule file for hxefpu64 exerciser running on P7.
*
* This Rule file is for "fpscr_bfu" shift. It has 70% BFP all instructions and 
* and 30% move to/from FPSCR instructions interleaved on each thread.
*
* For details of rule keywords, please refer hxefpu64.readme
* in /usr/lpp/htx/rules/reg/hxefpu64 dir on test machine.
*
* NOTE: Rule keyword & associated value should be all in one
*	line _only_. Currently '\n' (newline) is used as
*	delimiter to differentiate between keywords.
*


* All BFP with FPSCR move to/from interleaved and 100% normal data

rule_id						bfpscr_norm
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[20,30,20,30,20,30,20,30]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa, 0xa]
INS_BIAS_MASK				[(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30)]


* All BFP with FPSCR move to/from interleaved and 50/50 normal/denormal data

rule_id						bfpscr_n_dn
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[20,20,20,20,20,20,20,20]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0x55]
INS_BIAS_MASK				[(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30)]


* All BFP with FPSCR move to/from interleaved and 100% denormal data

rule_id						bfpscr_denorm
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[30,30,30,30,30,30,30,30]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0, 0xa0]
INS_BIAS_MASK				[(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30)]


* All BFP with FPSCR move to/from interleaved and 100% denormal data

rule_id						bfpscr_all
num_oper					2000
num_threads					0
seed						[0,0,0,0,0,0,0,0]
stream_depth				2000
test_method					1
unaligned_loads_stores_%	[20,30,20,30,20,30,20,30]
fpscr						[0,0,0,0,0,0,0,0]
DATA_BIAS_MASK				[0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111]
INS_BIAS_MASK				[(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30):(0x020000000005ffff,70)(0x0200000000020000,30)]

