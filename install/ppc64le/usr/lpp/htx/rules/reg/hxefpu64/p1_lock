* Rule file	for	hxefpu64 exerciser running on P7.
*
* This Rule	file is	for	"p1_lock" shift. Instruction biasing is shown below.
*
* For details of rule keywords,	please refer hxefpu64.readme
* in /usr/lpp/htx/rules/reg/hxefpu64 dir on	test machine.
*
* NOTE:	Rule keyword & associated value	should be all in one
*	line _only_. Currently '\n'	(newline) is used as
*	delimiter to differentiate between keywords.
*

* PM category instruction mask
* VMX
*  0x0400000001000000 - VMX_MISC_ONLY (VMX merge, splat, pack/unpack, shift, permute - all inclusive)
* VSX
*  0x0100000400000000 - VSX_MISC_ONLY (VSX merge, permute, select, shift, splat - not exerything included)
*
* (0x0400000001000000,90)(0x0100000400000000,10)
*
* Threadwise instruction biasing
* T0-3: PM (sub-part of integer) and DFU


* P1_lock shifts with 100% normal data

rule_id						p1_lock_norm
num_oper					20000
num_threads					0
seed						[0x0, 0x0, 0x0,	0x0]
stream_depth				200
test_method					1
unaligned_loads_stores_%	[20,30,20,30]
fpscr						[0x0, 0x0, 0x0,	0x0]
DATA_BIAS_MASK				[0xa, 0xa, 0xa,	0xa]
INS_BIAS_MASK				[(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50)]


* P1_lock shifts with 50/50% normal/denormal data

rule_id						p1_lock_n_dn
num_oper					20000
num_threads					0
seed						[0x0, 0x0, 0x0,	0x0]
stream_depth				200
test_method					1
unaligned_loads_stores_%	[20,20,20,20]
fpscr						[0x0, 0x0, 0x0,	0x0]
DATA_BIAS_MASK				[0x55, 0x55, 0x55, 0x55]
INS_BIAS_MASK				[(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50)]


* P1_lock shifts with 100% denormal	data

rule_id						p1_lock_denorm
num_oper					20000
num_threads					0
seed						[0x0, 0x0, 0x0,	0x0]
stream_depth				200
test_method					1
unaligned_loads_stores_%	[30,30,30,30]
fpscr						[0x0, 0x0, 0x0,	0x0]
DATA_BIAS_MASK				[0xa0, 0xa0, 0xa0, 0xa0]
INS_BIAS_MASK				[(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50)]


* P1_lock shifts with mix data corners

rule_id						p1_lock_all
num_oper					20000
num_threads					0
seed						[0x0, 0x0, 0x0,	0x0]
stream_depth				200
test_method					1
unaligned_loads_stores_%	[20,20,20,20]
fpscr						[0x0, 0x0, 0x0,	0x0]
DATA_BIAS_MASK				[0x1111111111, 0x1111111111, 0x1111111111, 0x1111111111]
INS_BIAS_MASK				[(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50):(0x0400000001000000,45)(0x0100000400000000,5)(0x030000001fffffff,50)]
